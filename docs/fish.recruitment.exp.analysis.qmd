---
title: "Fish Recruitment Analysis"
author: "Kelsey Webber"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    css: resources/AIMS-style.css
    toc: true
    toc-float: true
    number-sections: true
    number-depth: 4
    embed-resources: true
    code-fold: false
    code-tools: true
    code-summary: "Show the code"
crossref:
  fig-title: '**Figure**'
  fig-labels: arabic
  tbl-title: '**Table**'
  tbl-labels: arabic
engine: knitr
bibliography: resources/references.bib
output_dir: "docs"
---

```{r chunks, results='markdown', eval=TRUE, echo = FALSE}
knitr::read_chunk('../R/functions.R')
knitr::read_chunk('../R/analysis_recruitment.R')

```

# Preparations

- Load any helper functions (functions.R)

```{r loadFunctions, results='markdown', eval=FALSE}
```

```{r setup, include=FALSE, warnings=FALSE, message=FALSE}
```


- Load required packages (functions.R)

```{r loadPackages, results='markdown', eval = TRUE, warnings = FALSE, message = FALSE}
```

- Prepare paths (functions.R)

```{r preparePaths, results='markdown', eval = TRUE}

```

# Load Fish Recruitment data

1. Load the data
```{r FishRecruitment readData, results = 'markdown', eval = TRUE}
```

2. Glimpse the data
```{r recruitment glimpse, results='markdown', eval=TRUE}
```

```{r recruitment report table, results='markdown', eval=TRUE}
```

3. Factorise and clean
```{r factorise and clean, results = 'markdown', eval = TRUE}
```

# EDA

## Algae EDA

```{r recruitment algae summary table, results = 'markdown', eval = TRUE}
```

```{r recruitment algae summary figures, results = 'markdown', eval = TRUE}
```
A bit of an outlier in Length - One plot (W5) had an extra long 52cm thallus. I checked in the video and this was not a typo. However its weight was not super high (70g). Lengths otherwise fairly similar, around 30cm

Weights per plot: BQ < DL <= BH <= DM < W

## Fish EDA

### 1.0 Total abundance
```{r fish EDA total abundance, results = 'markdown', eval = TRUE}
```
Total abundance seems to follow a similar pattern to the biomass of macroalgae. It’s also very nice that the variance doesn’t seem to differ among treatments

1.1 Total abundance over time
```{r fish EDA abundance time, results = 'markdown', eval = TRUE}
```
Does abundance/diversity/biomass (size) change differently over time among treatments?

Yes (Abundance) – W treatment seems to continuously increase, while other treatments (esp DL and BQ) flatten early. Carrying capacity being reached earlier? DM shows a hump in abundance

1.2 Abundance vs Algal biomass
```{r fish EDA abundance vs biomass, results = 'markdown', eval = TRUE}
```
Could the plot biomass be used as a predictor of total abundance?- yeah seems so

### 2.0 Species Richness

```{r fish EDA Species richness, results = 'markdown', eval = TRUE}
```
Similarly to abundance, richness seems to follow a similar pattern to the biomass of macroalgae.


2.1 Species richness over time
```{r fish EDA richness vs time, results = 'markdown', eval = TRUE}
```
Does abundance/diversity/biomass (size) change differently over time among treatments?

For diversity,  W again seems to continuously increase, while other treatments (esp DL and BQ) flatten early. DM shows an even more prominent hump in abundance around day 8.

2.2 Species Richness vs Algal biomass
```{r fish EDA richness vs biomass, results = 'markdown', eval = TRUE}
```

Could the plot biomass be used as a predictor of diversity ?- yeah seems so

### 3 Find Common Species
```{r fish EDA commonness, results = 'markdown', eval = TRUE}
```
The top 6 (Halichoeres miniatus to Siganus fuscescens) collectively accounted for 90% of total abundance, each individually accounted for more than 2% of total abundance and appeared every day. Only Steothjulis strigiventer also appeared every day (but why analyse it if not something else more abundant?) Using just the top 6 or less makes sense

### 4.0 Common species patterns
```{r fish EDA common species1, results = 'markdown', eval = TRUE}
```

Petroscirtes and Siganus doliatus and maybe Pomacentrus tripunctatus show a somewhat similar patttern to that of plot biomass, but lots of skew. Halichoeres miniatus shows a fairly similar abundance among treatments (although I wonder if the size distributions may vary?) Maybe not enough data for Lethrinus atkinsoni and Siganus fuscescens

4.1 Common species over time
```{r fish EDA common species2, results = 'markdown', eval = TRUE}
```

H. miniatus, Petroscirtes sp. and tripunctatus accumulated over time, particularly in treatments W, BH and DM (H. miniatus), W (Petroscirtes) and all except BQ in P. tripunctatus. S doliatus declined in abundance over time to making W, BH and DM, which started off with more, approximately similar to the other treatments after ~6 days. L atkinsoni and S. fuscescens show no clear pattern (not enough data)

4.2 Common sp vs algal biomass
```{r fish EDA common species3, results = 'markdown', eval = TRUE}
```
Unlikely to be worth exploring L. atkinsoni and S. fuscescens, but the rest show a bit of a positive relationship (including H. miniatus kind of). Petroscirtes sp. the strongest relationship

# Univariate modelling

## Total abundance
```{r recruitment univariate setup data, results = 'markdown', eval = TRUE}
```


### Fit model
```{r recruitment univariate abundance initial models, results = 'markdown', eval = TRUE}
```
The 'Treatment' model with performed best. Plot weight model and all models with density included performed poorly. Note it wouldn't make sense to include density and treatment, but plot weight did vary within treatments. However the models including Treatment and plot.weight performed poorly 

### Validate/Refit
```{r recruitment univariate abundance validate, results = 'markdown', eval = TRUE}
```
residuals look quite  good.
However, there appears to be definite autocorrelation
No zero inflation


```{r recruitment univariate abundance refit autocorrelation, results = 'markdown', eval = TRUE}
```
autocorrelation model fit straight away, and is the definite winner by AICc despite higher df

```{r recruitment univariate abundance revalidate, results = 'markdown', eval = TRUE}

```
The autocorrelation model's residuals didn't meet the assumptions, particularly uniformity.It also still shows autocorrelation

However: (from https://rdrr.io/cran/DHARMa/man/testTemporalAutocorrelation.html)

Note
Standard DHARMa simulations from models with (temporal / spatial / phylogenetic) conditional autoregressive terms will still have the respective temporal / spatial / phylogenetic correlation in the DHARMa residuals, unless the package you are using is modelling the autoregressive terms as explicit REs and is able to simulate conditional on the fitted REs. This has two consequences

If you check the residuals for such a model, they will still show significant autocorrelation, even if the model fully accounts for this structure.

Because the DHARMa residuals for such a model are not statistically independent any more, other tests (e.g. dispersion, uniformity) may have inflated type I error, i.e. you will have a higher likelihood of spurious residual problems.

There are three (non-exclusive) routes to address these issues when working with spatial / temporal / other autoregressive models:

Simulate conditional on the fitted CAR structures (see conditional simulations in the help of simulateResiduals)

Rotate simulations prior to residual calculations (see parameter rotation in simulateResiduals)

Use custom tests / plots that explicitly compare the correlation structure in the simulated data to the correlation structure in the observed data.

### Partial Plot
```{r recruitment univariate abundance partial, results='markdown', eval = TRUE}

```


### Bayesian Model

```{r recruitment univariate abundance priors1, results = 'markdown', eval = TRUE}

```
The default priors were mostly flat for the effects and student_t for the sds. A prior I haven't used before appeared - class 'ar' - flat, with an upper bound of 1 and a lower bound of -1.
From the plots and eda, above, an appropriate estimate of the abundance in group BH (the default first) would be 8. On the log scale, log 8 `r log(8)` ~ 2.1 (the same as brms would give for the median of the student_t for the Intercept). However the dispersion of 2.5 is likely too wide
In addition to an sd overall, an sd for the intercept and an sd by group = plotID, an additional 'sderr' term exists. Something to do with autocorrelation (it did not appear in a formula without the ar term)

for the intercept, a more appropriate prior might be N(2,1)

For the slope, sd(RESPONSE/sd(PREDICTOR) – gives a very crude approximation of the sd of the slope of that relationship. IN this case our predictor is Catergorical, so we have to use dummy code (0s and 1s)
```{r recruitment univariate abundance priors2, results = 'markdown', eval = TRUE}

```

the sds are the same for each treatment because the study was balanced
for the variance argument for the slope prior, a bit more than 4, say 4.5 or 5 (to allow a bit more width) would probably be appropriate
i.e. N(0, 5)

For sd, a cauchy (0.2) will be used to begin with. I'll leave "sderr" with its default
```{r recruitment univariate abundance fit brm1, results = 'markdown', eval = TRUE, error = TRUE, cache = TRUE}

```
a prior must be set for ar

```{r recruitment univariate abundance fit brm2, results = 'markdown', eval = TRUE, error = TRUE, cache = TRUE}

```
The model fit, however I can't seem to retrieve the ggpredict() estimates


```{r recruitment univariate abundance fit brm3, results = 'markdown', eval = TRUE, error = TRUE, cache = TRUE}

```


### Model Investigation
```{r recruitment univariate abundance summary, results = 'markdown', eval = TRUE, error =TRUE}

```

```{r recruitment univariate abundance brm summary, results = 'markdown', eval = TRUE, error =TRUE}

```
Clear differences among treatments. 

Estimate of BH mean abundance: `r exp(2.1)`. Estimate for W is `r exp(.56)` x higher (`r exp(2.1+.56)`)
R-square estimates indicate the model without the random component of PlotID explains approximately 50% of the variance. With the random effect it explains 62% (using the trigamma method as this model has a log link, package authors recommend this)

Planned contrasts: from Murray Logan Course notes "In frequentist analyses you can make nlevels - 1 contrasts without p adjustment - as long as they're independent." - however I've read one other source suggesting one should still apply a correction even then. I'll leave this for now. If running Bayesian, I can make as many contrasts as I want
#```{r recruitment univariate abundance planned contrasts}

#```

